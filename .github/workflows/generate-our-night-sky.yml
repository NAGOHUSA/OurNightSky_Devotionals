name: Generate Our Night Sky Devotional

on:
  schedule:
    # 04:00 Eastern Time:
    # - During EST (UTC-5): 09:00 UTC
    # - During EDT (UTC-4): 08:00 UTC
    # Pick one; keeping 09:00 UTC here to target 04:00 during EST.
    - cron: "0 9 * * *"
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: ons-devotional-pipeline
  cancel-in-progress: false

jobs:
  generate-devotional:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo (full history)
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          # Use lockfile if present; otherwise fall back to npm i
          if [ -f package-lock.json ]; then
            npm ci || npm i
          else
            npm i
          fi

      # ⬇️ Replace this step with your actual generation script/command(s)
      - name: Generate devotional
        env:
          # Add any API keys here via repo secrets, e.g.:
          # OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # GROQ_API_KEY:   ${{ secrets.GROQ_API_KEY }}
          # DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          TZ: "UTC"
        run: |
          set -euo pipefail
          # Example run with basic retry (adjust to your script name/args)
          n=0
          until [ $n -ge 3 ]
          do
            if node generate-devotional.js; then
              break
            fi
            n=$((n+1))
            echo "Retrying generate-devotional.js ($n/3)..."
            sleep 5
          done

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit changes (if any)
        run: |
          set -euo pipefail
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
            echo "::notice title=Devotional::No changes detected; skipping commit."
            exit 0
          fi
          # Use the repo's timezone/date if you prefer; this uses UTC.
          git commit -m "chore: devotional for $(date -u +'%Y-%m-%d') [ci]"

      - name: Rebase on remote and push safely
        run: |
          set -euo pipefail
          # Make sure we're up-to-date, then rebase our new commit(s)
          git fetch origin main

          # Try the rebase up to 3 times in case of a race with another run
          attempt=1
          until [ $attempt -gt 3 ]
          do
            if git rebase origin/main; then
              break
            else
              echo "Rebase attempt $attempt failed. Aborting and retrying..."
              git rebase --abort || true
              git fetch origin main
              attempt=$((attempt+1))
              sleep 2
            fi
          done

          # First try a normal push
          if git push origin HEAD:main; then
            echo "Pushed without force."
            exit 0
          fi

          # If history moved during our rebase window, use force-with-lease for safety
          echo "Normal push failed; attempting protected force push..."
          git push --force-with-lease origin HEAD:main
