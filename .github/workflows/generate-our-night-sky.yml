# .github/workflows/generate-our-night-sky.yml
name: Generate Our Night Sky Devotional (v4)

on:
  schedule:
    # Run at 04:00 America/New_York year-round (handles EDT/EST by doubling)
    - cron: "0 8 * * *"   # 04:00 when ET = UTC-4 (EDT)
    - cron: "0 9 * * *"   # 04:00 when ET = UTC-5 (EST)
  workflow_dispatch: {}

# Prevent colliding commits when multiple runs overlap
concurrency:
  group: devotional-${{ github.ref }}
  cancel-in-progress: false

jobs:
  generate-devotional:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    env:
      # ---- App config (edit as you like) ----
      ONS_LOCATION: "USA"
      ONS_THEME_DEFAULT: "wonder"

      # ---- Provider bases & models (override if needed) ----
      GROQ_API_BASE: "https://api.groq.com/openai/v1"
      OPENAI_API_BASE: "https://api.openai.com/v1"
      DEEPSEEK_API_BASE: "https://api.deepseek.com/v1"

      GROQ_MODEL: "llama-3.1-8b-instant"
      OPENAI_MODEL: "gpt-4o-mini"
      DEEPSEEK_MODEL: "deepseek-chat"

      NODE_ENV: "production"
      FORCE_COLOR: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # needed for rebase before push

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          set -euo pipefail
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm i
          fi

      - name: Generate devotional
        env:
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        run: |
          set -euo pipefail
          mkdir -p devotionals
          node generate-our-night-sky.js

      - name: Verify output exists for today (UTC)
        run: |
          set -euo pipefail
          TODAY=$(date -u +'%Y-%m-%d')
          if [ ! -f "devotionals/${TODAY}.json" ]; then
            echo "Expected devotionals/${TODAY}.json was not produced."
            exit 1
          fi
          echo "Found devotionals/${TODAY}.json"

      - name: Duplicate guard vs yesterday (defense-in-depth)
        run: |
          set -euo pipefail
          TODAY=$(date -u +'%Y-%m-%d')
          # Ubuntu runners use GNU date, so this works:
          YESTERDAY=$(date -u -d "yesterday" +'%Y-%m-%d')
          if [ -f "devotionals/${YESTERDAY}.json" ]; then
            CURR_HASH=$(sha256sum "devotionals/${TODAY}.json" | cut -d' ' -f1)
            PREV_HASH=$(sha256sum "devotionals/${YESTERDAY}.json" | cut -d' ' -f1)
            if [ "$CURR_HASH" = "$PREV_HASH" ]; then
              echo "Duplicate content hash vs yesterday — failing to avoid publishing a repeat."
              exit 1
            fi
          fi
          echo "No hash-level duplicate detected."

      - name: Commit & push if changed (with rebase + retries)
        run: |
          set -euo pipefail

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add devotionals
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git commit -m "chore: devotional for $(date -u +'%Y-%m-%d') [v2]"

          # Rebase our commit(s) on top of the latest remote to avoid non-fast-forward errors
          git fetch origin main
          git rebase origin/main || { echo "Rebase failed."; git rebase --abort; exit 1; }

          # Push with up to 3 retries in case another workflow landed between rebase and push
          for attempt in 1 2 3; do
            if git push origin HEAD:main; then
              echo "Pushed on attempt $attempt"
              exit 0
            fi
            echo "Push attempt $attempt failed — refetch & rebase, then retry..."
            git fetch origin main
            git rebase origin/main || { echo "Rebase failed on retry."; git rebase --abort; exit 1; }
            sleep $((attempt * 3))
          done

          echo "Push failed after retries."
          exit 1
