name: Generate Our Night Sky Devotional

on:
  schedule:
    # 04:00 Eastern (targets 09:00 UTC, which equals 04:00 during EST; 05:00 during EDT)
    - cron: "0 9 * * *"
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: ons-devotional-pipeline
  cancel-in-progress: false

jobs:
  generate-devotional:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies (if any)
        run: |
          if [ -f package-lock.json ]; then
            npm ci || npm i
          elif [ -f package.json ]; then
            npm i
          else
            echo "No package.json found; continuing without npm install."
          fi

      - name: Locate generator script
        id: locate
        run: |
          set -euo pipefail
          # Search common locations for the generator
          CANDIDATES=(
            "./generate-devotional.js"
            "./scripts/generate-devotional.js"
            "./tools/generate-devotional.js"
            "./ci/generate-devotional.js"
          )
          for f in "${CANDIDATES[@]}"; do
            if [ -f "$f" ]; then
              echo "GEN_SCRIPT=$f" >> $GITHUB_ENV
              echo "Found generator at: $f"
              exit 0
            fi
          done
          echo "::warning title=Generator Missing::No generator found; using fallback ./generate-devotional.js"
          # Optional: create a minimal fallback if it's truly missing
          if [ ! -f "./generate-devotional.js" ]; then
            cat > ./generate-devotional.js <<'EOF'
const fs = require('fs');
const path = require('path');

function todayUTC() {
  const d = new Date();
  const yyyy = d.getUTCFullYear();
  const mm = String(d.getUTCMonth() + 1).padStart(2, '0');
  const dd = String(d.getUTCDate()).padStart(2, '0');
  return `${yyyy}-${mm}-${dd}`;
}

function ensureDir(p) { fs.mkdirSync(p, { recursive: true }); }

const dateStr = todayUTC();
const outDir = path.join(process.cwd(), 'devotionals');
ensureDir(outDir);

const data = {
  app: "Our Night Sky",
  date: dateStr,
  provider: "local-fallback",
  model: "none",
  hemisphere: "Northern",
  location: null,
  content_markdown: `# Our Night Sky — ${dateStr}

## Scripture
"The heavens declare the glory of God; the skies proclaim the work of his hands." — Psalm 19:1

## Reflection
A placeholder devotional was generated because no AI provider ran. Replace this with AI output as needed.

## Prayer
Lord, open our eyes to the wonder of Your creation and guide our steps by Your light. Amen.

## Celestial Connection
• Moon: (placeholder)
• Visible Planets: (placeholder)
• Note: Replace this with live sky data if desired.
`,
};

const outPath = path.join(outDir, `${dateStr}.json`);
fs.writeFileSync(outPath, JSON.stringify(data, null, 2), 'utf8');
console.log(`Wrote ${outPath}`);
EOF
          fi
          echo "GEN_SCRIPT=./generate-devotional.js" >> $GITHUB_ENV

      - name: Generate devotional (with simple retry)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          TZ: "UTC"
        run: |
          set -euo pipefail
          echo "Using generator: ${GEN_SCRIPT}"
          n=0
          until [ $n -ge 3 ]
          do
            if node "${GEN_SCRIPT}"; then
              break
            fi
            n=$((n+1))
            echo "Retrying (${n}/3)..."
            sleep 5
          done

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit changes (if any)
        run: |
          set -euo pipefail
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "chore: devotional for $(date -u +'%Y-%m-%d') [ci]"

      - name: Rebase on remote and push safely
        run: |
          set -euo pipefail
          git fetch origin main

          attempt=1
          until [ $attempt -gt 3 ]
          do
            if git rebase origin/main; then
              break
            else
              echo "Rebase attempt $attempt failed. Aborting and retrying..."
              git rebase --abort || true
              git fetch origin main
              attempt=$((attempt+1))
              sleep 2
            fi
          done

          if git push origin HEAD:main; then
            echo "Pushed without force."
            exit 0
          fi

          echo "Normal push failed; attempting protected force push..."
          git push --force-with-lease origin HEAD:main
